// @generated by protoc-gen-es v2.5.2 with parameter "target=js+ts"
// @generated from file goatorepo/rpc.proto (package goatorepo, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file goatorepo/rpc.proto.
 */
export const file_goatorepo_rpc: GenFile = /*@__PURE__*/
  fileDesc("ChNnb2F0b3JlcG8vcnBjLnByb3RvEglnb2F0b3JlcG8iywEKA1JwYxIKCgJpZBgBIAEoBBIoCgZoZWFkZXIYAiABKAsyGC5nb2F0b3JlcG8uUmVxdWVzdEhlYWRlchIpCgZzdGF0dXMYAyABKAsyGS5nb2F0b3JlcG8uUmVzcG9uc2VTdGF0dXMSHQoEYm9keRgEIAEoCzIPLmdvYXRvcmVwby5Cb2R5EiMKB3RyYWlsZXIYBSABKAsyEi5nb2F0b3JlcG8uVHJhaWxlchIfCgVyZXNldBgGIAEoCzIQLmdvYXRvcmVwby5SZXNldCKUAQoNUmVxdWVzdEhlYWRlchIOCgZtZXRob2QYASABKAkSJAoHaGVhZGVycxgCIAMoCzITLmdvYXRvcmVwby5LZXlWYWx1ZRIOCgZzb3VyY2UYAyABKAkSEwoLZGVzdGluYXRpb24YBCABKAkSFAoMcHJveHlfcmVjb3JkGAUgAygJEhIKCnByb3h5X25leHQYBiADKAkiVgoOUmVzcG9uc2VTdGF0dXMSDAoEY29kZRgBIAEoBRIPCgdtZXNzYWdlGAIgASgJEiUKB2RldGFpbHMYAyADKAsyFC5nb29nbGUucHJvdG9idWYuQW55IiYKCEtleVZhbHVlEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSIUCgRCb2R5EgwKBGRhdGEYASABKAwiMAoHVHJhaWxlchIlCghtZXRhZGF0YRgBIAMoCzITLmdvYXRvcmVwby5LZXlWYWx1ZSIVCgVSZXNldBIMCgR0eXBlGAEgASgJQiAKEW5vLm5lYXQuZ29hdG9yZXBvWgsuL2dvYXRvcmVwb2IGcHJvdG8z", [file_google_protobuf_any]);

/**
 * Top-level message used for all GOAT communications.
 *
 * @generated from message goatorepo.Rpc
 */
export type Rpc = Message<"goatorepo.Rpc"> & {
  /**
   * Analogous to a "Stream Identifier" in HTTP/2: allocated by the initator of an RPC, a
   * unique identifier used to group requests and responses specific to this request.
   *
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  /**
   * Information identifying the request to be made; hence always set in the initial
   * request. At a minimum in such a request, the RPC method to be invoked is set. This
   * information is transferred in the URL path in HTTP/2.
   *
   * @generated from field: goatorepo.RequestHeader header = 2;
   */
  header?: RequestHeader;

  /**
   * When a request finishes, it is explicitly marked with a status code, and
   * with trailers. In HTTP/2 this is communicated with a HEADERS frame following the
   * response DATA frame, with certain canonical headers set like `grpc-status`.
   *
   * @generated from field: goatorepo.ResponseStatus status = 3;
   */
  status?: ResponseStatus;

  /**
   * The actual RPC request or response data: just some opaque bytes, this is usually
   * protobuf-serialised bytes.
   *
   * @generated from field: goatorepo.Body body = 4;
   */
  body?: Body;

  /**
   * Like status, this is sent as part of a response, and allows arbitrary key/values
   * to be communicated. This maps onto "Trailers" in the HTTP/2 encoding, but without
   * status-code, which is encoded explicitly above.
   *
   * @generated from field: goatorepo.Trailer trailer = 5;
   */
  trailer?: Trailer;

  /**
   * Abnormal reset information, like RST_STREAM in HTTP/2.
   *
   * @generated from field: goatorepo.Reset reset = 6;
   */
  reset?: Reset;
};

/**
 * Describes the message goatorepo.Rpc.
 * Use `create(RpcSchema)` to create a new message.
 */
export const RpcSchema: GenMessage<Rpc> = /*@__PURE__*/
  messageDesc(file_goatorepo_rpc, 0);

/**
 * @generated from message goatorepo.RequestHeader
 */
export type RequestHeader = Message<"goatorepo.RequestHeader"> & {
  /**
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * @generated from field: repeated goatorepo.KeyValue headers = 2;
   */
  headers: KeyValue[];

  /**
   * @generated from field: string source = 3;
   */
  source: string;

  /**
   * @generated from field: string destination = 4;
   */
  destination: string;

  /**
   * @generated from field: repeated string proxy_record = 5;
   */
  proxyRecord: string[];

  /**
   * @generated from field: repeated string proxy_next = 6;
   */
  proxyNext: string[];
};

/**
 * Describes the message goatorepo.RequestHeader.
 * Use `create(RequestHeaderSchema)` to create a new message.
 */
export const RequestHeaderSchema: GenMessage<RequestHeader> = /*@__PURE__*/
  messageDesc(file_goatorepo_rpc, 1);

/**
 * Based on https://cloud.google.com/apis/design/errors
 * See: https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
 *
 * @generated from message goatorepo.ResponseStatus
 */
export type ResponseStatus = Message<"goatorepo.ResponseStatus"> & {
  /**
   * @generated from field: int32 code = 1;
   */
  code: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: repeated google.protobuf.Any details = 3;
   */
  details: Any[];
};

/**
 * Describes the message goatorepo.ResponseStatus.
 * Use `create(ResponseStatusSchema)` to create a new message.
 */
export const ResponseStatusSchema: GenMessage<ResponseStatus> = /*@__PURE__*/
  messageDesc(file_goatorepo_rpc, 2);

/**
 * @generated from message goatorepo.KeyValue
 */
export type KeyValue = Message<"goatorepo.KeyValue"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message goatorepo.KeyValue.
 * Use `create(KeyValueSchema)` to create a new message.
 */
export const KeyValueSchema: GenMessage<KeyValue> = /*@__PURE__*/
  messageDesc(file_goatorepo_rpc, 3);

/**
 * @generated from message goatorepo.Body
 */
export type Body = Message<"goatorepo.Body"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message goatorepo.Body.
 * Use `create(BodySchema)` to create a new message.
 */
export const BodySchema: GenMessage<Body> = /*@__PURE__*/
  messageDesc(file_goatorepo_rpc, 4);

/**
 * Signals that a stream is done. Used only as a response.
 *
 * @generated from message goatorepo.Trailer
 */
export type Trailer = Message<"goatorepo.Trailer"> & {
  /**
   * @generated from field: repeated goatorepo.KeyValue metadata = 1;
   */
  metadata: KeyValue[];
};

/**
 * Describes the message goatorepo.Trailer.
 * Use `create(TrailerSchema)` to create a new message.
 */
export const TrailerSchema: GenMessage<Trailer> = /*@__PURE__*/
  messageDesc(file_goatorepo_rpc, 5);

/**
 * @generated from message goatorepo.Reset
 */
export type Reset = Message<"goatorepo.Reset"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message goatorepo.Reset.
 * Use `create(ResetSchema)` to create a new message.
 */
export const ResetSchema: GenMessage<Reset> = /*@__PURE__*/
  messageDesc(file_goatorepo_rpc, 6);

